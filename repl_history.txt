#V2
complex = (x, y) => { x * 2 + y / 2 - 1 }
complex(5, 10)
exit
sum = (a, b) => { a + b }
sum(5,7)
sum = (a, b) => { a + b }
sum(5,7)
sum = (a, b) => { a + b }
sum(5,7)
sum = (a, b) => { a + b }
sum(5,7)
sum = (a, b) => { a + b }
sum(5,7)
((a, b) => { a + b })(5,7)
(a, b) => { a + b }
_
_(3,4)
sum = (a, b) => { a + b }
fn sum(a, b) { a + b }
sum(5, 3)
fn square(x) { x * x }
fn double(x) { x * 2 }
y = square(5)
z = double(y)
z
fn square(x) { x * x }
square(5)
fn cube(x) { x * x * x }
cube(12)
cube(10)
cube(1000)
cube(1.25)
cube(10)
fn cube(x) { x * x * x }
cube(10)
x = cube(10)
x = (a,b) => {a + b}
x(1,2)
x(3,4)
fn cube(x) { x * x * x }
cube(10)
x = cube(10)
x
x + 1
1 + 2
2+3
2 + 3
5 * 4
x = 10
x + 5
exit
10 - 4 + 2
y = 3 * 7
y
(y + 5) / 2
exit
(y + 5) / 2
x
fn cube(x) { x * x * x }
cube(10)
x = cube(1)
x = cube(10)
x
x = cube(3)
x
foo = (a,b) => {a + b}
foo(3,4)
z = foo(3,4)
z
foo = (a,b) => {a + b}
fn cube(x) { x * x * x }
cube(-2)
-2 * -2 * -2
fn cube(x) { x * x * x }
cube(-2)
(-2) * (-2) * (-2)
-2
-2 + 3
fn add(a, b) { a + b }
fn multiply(x, y) { x * y }
fn square(n) { n * n }
multiply(3, 4)
square(2)
add(12, 4)
fn add(a, b) { a + b }
fn multiply(x, y) { x * y }
fn square(n) { n * n }
add(multiply(3, 4), square(2))
fn add(a, b) { a + b }
fn multiply(x, y) { x * y }
fn square(n) { n * n }
add(multiply(3, 4), square(2))
fn add(a, b) { a + b }
add(3, 4)
fn add(a, b) { a + b }
fn multiply(x, y) { x * y }
add(multiply(3, 4), 4)
fn add(a, b) { a + b }
fn square(n) { n * n }
add(4, square(2))
